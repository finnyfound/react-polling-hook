{"version":3,"sources":["webpack://ReactPollingHook/webpack/universalModuleDefinition","webpack://ReactPollingHook/webpack/bootstrap","webpack://ReactPollingHook/external \"react\"","webpack://ReactPollingHook/./src/usePolling.js","webpack://ReactPollingHook/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","usePolling","config","React","version","split","Error","url","_config$interval","interval","_config$retryCount","retryCount","onSuccess","_config$onFailure","onFailure","api","_objectWithoutPropertiesLoose","_useState","useState","isPolling","togglePolling","persistedIsPolling","useRef","isMounted","poll","current","useEffect","startPolling","stopPolling","shouldRetry","clearTimeout","runPolling","timeoutId","setTimeout","fetch","then","resp","json","data","ok","Promise","reject","status","continuePolling","catch","error","__webpack_exports__","src_usePolling"],"mappings":"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","file":"ReactPollingHook.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPollingHook\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactPollingHook\"] = factory(root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","import React, { useState, useEffect, useRef } from 'react';\n\nconst usePolling = config => {\n  const version = React.version.split('-');\n  if (version[0] < '16.7.0') {\n    throw new Error('Hooks are only supported in React 16.7.0-alpha release or above');\n  }\n  let { url, interval = 3000, retryCount = 0, onSuccess, onFailure = () => {}, ...api } = config;\n  const [isPolling, togglePolling] = useState(false);\n\n  const persistedIsPolling = useRef();\n  const isMounted = useRef();\n  const poll = useRef();\n\n  persistedIsPolling.current = isPolling;\n\n  useEffect(() => {\n    isMounted.current = true;\n    startPolling();\n    return () => {\n      isMounted.current = false;\n      stopPolling();\n    };\n  }, []);\n\n  // if no url specified, throw an error\n  if (!url) {\n    throw new Error('No url provided to poll. Please provide a config object with the url param set');\n  }\n\n  const shouldRetry = retryCount ? true : false;\n\n  const stopPolling = () => {\n    if (isMounted.current) {\n      if (poll.current) {\n        clearTimeout(poll.current);\n        poll.current = null;\n      }\n      togglePolling(false);\n    }\n  };\n\n  const startPolling = () => {\n    // why this does not update state?\n    togglePolling(true);\n    // call runPolling, which will start timer and call our api\n    runPolling();\n  };\n\n  const runPolling = () => {\n    const timeoutId = setTimeout(() => {\n      /* onSuccess would be handled by the user of service which would either return true or false\n             * true - This means we need to continue polling\n             * false - This means we need to stop polling\n             */\n      fetch(url, api)\n        .then(resp => {\n          return resp.json().then(data => {\n            if (resp.ok) {\n              return data;\n            } else {\n              return Promise.reject({ status: resp.status, data });\n            }\n          });\n        })\n        .then(onSuccess)\n        .then(continuePolling => {\n          persistedIsPolling.current && continuePolling ? runPolling() : stopPolling();\n        })\n        .catch(error => {\n          if (shouldRetry && retryCount > 0) {\n            onFailure && onFailure(error);\n            retryCount--;\n            runPolling();\n          } else {\n            onFailure && onFailure(error);\n            stopPolling();\n          }\n        });\n    }, interval);\n    poll.current = timeoutId;\n  };\n\n  return [isPolling, startPolling, stopPolling];\n};\n\nexport default usePolling;\n","import usePolling from './usePolling';\nexport { usePolling };\n"],"sourceRoot":""}